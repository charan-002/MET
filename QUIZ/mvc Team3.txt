

3) Explain in which assembly is the MVC framework is defined?

The MVC framework is defined in System.Web.Mvc.
-----------------------
4)Can you explain the page life cycle of MVC?

Below are the processed followed in the sequence -

?App initialization

?Routing

?Instantiate and execute controller

?Locate and invoke controller action

?Instantiate and render view.
--------------------
5) What are the advantages of MVC over ASP.NET?

?Provides a clean separation of concerns among UI (Presentation layer), model (Transfer objects/Domain Objects/Entities) and Business Logic (Controller).

?Easy to UNIT Test.

?Improved reusability of model and views. We can have multiple views which can point to the same model and vice versa.

?Improved structuring of the code.
----------------------------
11) What are Actions in MVC?

Actions are the methods in Controller class which is responsible for returning the view or json data. Action will mainly have return type?—?“ActionResult” and it will be invoked from method?—?“InvokeAction()” called by controller.
----------------
25) What is Layout in MVC?

Layout pages are similar to master pages in traditional web forms. This is used to set the common look across multiple pages. In each child page we can find?—?/p>

@{

Layout = “~/Views/Shared/TestLayout1.cshtml”;

}

This indicates child page uses TestLayout page as it’s master page.
--------------------------
27) Can you explain RenderBody and RenderPage in MVC?

RenderBody is like ContentPlaceHolder in web forms. This will exist in layout page and it will render the child pages/views. Layout page will have only one RenderBody() method. RenderPage also exists in Layout page and multiple RenderPage() can be there in Layout page.
--------------------------------------
28) What is ViewStart Page in MVC?

This page is used to make sure common layout page will be used for multiple views. Code written in this file will be executed first when application is being loaded.
===============================
40) What are Scaffold templates in MVC?

Scaffolding in ASP.NET MVC is used to generate the Controllers,Model and Views for create, read, update, and delete (CRUD) functionality in an application. The scaffolding will be knowing the naming conventions used for models and controllers and views.
===================================
41) Explain the types of Scaffoldings.

Below are the types of scaffoldings –

Empty

Create

Delete

Details

Edit

List
=================================
47) What is PartialView in MVC?

PartialView is similar to UserControls in traditional web forms. For re-usability purpose partial views are used. Since it’s been shared with multiple views these are kept in shared folder. Partial Views can be rendered in following ways –

Html.Partial()

Html.RenderPartial()
================================
What are HTML helpers in MVC?
HTML helpers help you to render HTML controls in the view. For instance if you want to display a HTML textbox on the view , below is the HTML helper code.

<%= Html.TextBox("FirstName") %>
=====================
What is the difference between “HTML.TextBox” and “HTML.TextBoxFor”?
  Both provide the same HTML output, “HTML.TextBoxFor” is strongly typed while “HTML.TextBox” isn’t.     Below is a simple HTML code which just creates a simple textbox with “FirstName” as name.

Html.TextBox("FirstName ")
Below is “Html.TextBoxFor” code which creates HTML textbox using the property name ‘FirstName” from object “m”.

Html.TextBoxFor(m => m.CustomerCode)
=====================
What is Partial View in MVC?
 Partial view is a reusable view (like a user control) which can be embedded inside other view. For example let’s say all your pages of your site have a standard structure with left menu, header, and footer as shown in the image below.

   

For every page you would like to reuse the left menu, header, and footer controls. So you can go and create partial views for each of these items and then you call that partial view in the main view.

 
=============================
What is GET and POST Actions Types?
GET

GET is used to request data from a specified resource. With all the GET request we pass the URL which is compulsory, however it can take the following overloads.

.get(url [, data ] [, success(data, textStatus, jqXHR) ] [, dataType ] ).done/.fail
 

POST

POST is used to submit data to be processed to a specified resource. With all the POST requests we pass the URL which is compulsory and the data, however it can take the following overloads.

.post(url [, data ] [, success(data, textStatus, jqXHR) ] [, dataType ] )
